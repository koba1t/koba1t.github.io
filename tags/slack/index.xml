<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>slack on kob | blog</title><link>https://www.k06.in/tags/slack/</link><description>Recent content in slack on kob | blog</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><lastBuildDate>Sun, 22 Dec 2019 04:15:18 +0900</lastBuildDate><atom:link href="https://www.k06.in/tags/slack/index.xml" rel="self" type="application/rss+xml"/><item><title>kubernetes-event-exporterを使ってslackへEventを通知する</title><link>https://www.k06.in/posts/send_to_slack_with_kubernetes-event-exporter/</link><pubDate>Sun, 22 Dec 2019 04:15:18 +0900</pubDate><guid>https://www.k06.in/posts/send_to_slack_with_kubernetes-event-exporter/</guid><description>kubernetes-event-exporter を使って slack へ Event を通知する この記事は信州大学 kstm Advent Calendar 2019の21日目です。UTCだとまだ2019/12/21です。
はじめに この前の kubecon 2019 NA で発表のあった kubernetes-event-exporter を使用してkubernetesのEventをslackへ通知する方法を試してみます。
kubernetes Eventとは EventとはkubernetesのClusterの中で実際に何がおこっているかの情報で、terminalからkubectl get eventで取得できます。 ただ、このEventの情報は1時間経過すると削除されてしまうので、後からkubernetes上で参照するのは難しかったりします。
kubernetes-event-exporterは発生したEventのフィルタリング、ルーティングを行なってくれるツールで、ElasticsearchやslackなどにEventの情報を送ってくれます。
install まずセットアップに必要なfileを kubernetes-event-exporter/deploy から取得します。
00-roles.yaml 01-config.yaml 02-deployment.yaml 01-config.yaml を編集することで、通知のフィルタリングや送信先を設定できます。
slackに通知を送るためには、以下のように01-config.yamlを編集します。 設定にslackのtokenが必要になるので事前に発行しておきましょう。 また、通知を送る先のチャンネルも用意します。(ここではkube-alertというチャンネルを指定しています)
apiVersion: v1 kind: ConfigMap metadata: name: event-exporter-cfg namespace: monitoring data: config.yaml: | route: match: - receiver: &amp;quot;slack&amp;quot; receivers: - name: &amp;quot;slack&amp;quot; slack: token: &amp;quot;xoxb-xxxxxxxxxxxxxxxxxxxxx&amp;quot; channel: &amp;quot;kube-alert&amp;quot; message: &amp;quot;{{ .Message}}&amp;quot; fields: namespace: &amp;quot;{{ .</description></item></channel></rss>